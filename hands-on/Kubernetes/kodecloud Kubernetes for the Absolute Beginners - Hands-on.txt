alias k=kubectl
echo 'alias k=kubectl' >>~/.bashrc
--------------------
KUBERNETES CONCEPTS – PODS, REPLICASETS, DEPLOYMENTS, LABS: REPLICA SETS

How many PODs exist on the system?
kubectl get pods

How many ReplicaSets exist on the system?
kubectl get pods -o wide

What is the image used to create the pods in the new-replica-set?
kubectl describe pod

Delete any one of the 4 PODs.
kubectl delete pod new-replica-set-2hwks

Create a ReplicaSet using the replicaset-definition-1.yaml file located at /root/.
kubectl apply -f replicaset-definition-1.yaml

Delete the two newly created ReplicaSets - replicaset-1 and replicaset-2
kubectl delete replicaset replicaset-1
kubectl delete replicaset replicaset-2

What is the ip of node
k get service --all-namespaces


Create a new deployment called redis-deploy in the dev-ns namespace with the redis image. It should have 2 replicas. Use imperative commands.
kubectl create deployment redis-deploy --image=redis --replicas=2 -n dev-ns

Create a pod called httpd using the image httpd:alpine in the default namespace. Next, create a service of type ClusterIP by the same name (httpd). The target port for the service should be 80.
kubectl run httpd --image=httpd:alpine --port=80 --expose


Create a new ConfigMap for the webapp-color POD. Use the spec given below. CheckCompleteIncomplete ConfigName Name: webapp-config-map, Data: APP_COLOR=darkblue
kubectl create configmap webapp-config-map --from-literal=APP_COLOR=darkblue

Mevcutta çalışan bir pod un yaml dosyasını oluşturmak için If you are not given a pod definition file, you may extract the definition to a file using the below command:
kubectl get pod <pod-name> -o yaml > unknown-pod-definition.yaml
kubectl replace -f example.yaml --force (ve artık hazırlanan yaml dosyasıyla çalışması için bağlanır)

------------------------------------------------------------------------------------------------------------
kubectl get cm -n flo => flo tag li configuration dosyalrını alır
-----------------------
minikube service voiting-service --url
http://192.168.99.101:30004

Delete deployment
kubectl delete -f .

rollout------
kubectl rollout status deployment/my-deployment

kubectr rollout history deployment/my-deployment


set-----------
kubectl set image deployment mydeployment nginx=nginx:1.18-perl
kubectl set image pod redis redis123=redis
kubectl scale deploy web-flask-deploy --replicas=3

kubectl replace -f rs-definition.yaml
kubectl scale --replicas=6 rs-definition.yaml
kubectl scale --replicas=6 replicaset my-replicaset
                            (types)       (name)
-----------------
k get pods --selector env=dev --no-headers | wc -l
k get all --selector env=prod,bu=finance,tier=frontend
-----------------
Then edit the file to make the necessary changes, delete and re-create the pod.

Use the kubectl edit pod <pod-name> command to edit pod properties.

-----------------------
Replica Control RC
-----------------------
k get replicaset
k get replicationcontroller
-----------------------
pod a bağlanma
k exect -it <pod name> -n flo -- bash
-----------------------
Jenkkinste namespace seçmek için
kucectx (Kalıcı) ya da awsx (1 defalık)
komutu girilir ve namespace seçilir (!!! joblarda girilen shell ler etkilenecektir)
-----------------------



-----------------------
Belli aralıklarla podların resetlenmesi için oluşturulan jenkins jobı execute shell örnegi
#!/bin/bash
echo "Prod ortamı Nxlog Restart işlemi başlıyor..."
pods=$(kubectl get pods -n NF-prod | grep NF-prod-deployment | awk '{print $1}')
for pod in $pods
do
	echo -e "Lojistik Prod - $pod - Nxlog Restart ---------------------\n"
	kubectl exec -it $pod -n NF-prod -- bash -c "service nxlog restart"
    echo -e "\n-----------------------------------------------------------\n"
    echo -e "Lojistik Prod - $pod - Nxlog Status ---------------------\n"
    kubectl exec -it $pod -n NF-prod -- bash -c "service nxlog status"
	echo -e "\n-----------------------------------------------------------"
done
echo "Prod ortamı Nxlog Restart işlemi tamamlandı."
-----------------------
