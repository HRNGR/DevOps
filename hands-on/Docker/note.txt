Başlangıç
--------------------
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker
sudo usermod -a -G docker ec2-user
newgrp docker
--------------------
Mevcut durum listeleme
--------------------
docker ps -a          (-a çalışan-çalışmayan tüm containerlar)
docker-compose up -d                docker-compose down
watch docker ps
docker container ls
docker network ls       ## Default networks ; Bridge, Null, Host
docker images // image leri listeler
tail-f )(dosyaadı accesslog)

--------------------

Bilgi inceleme
docker version
docker info
docker port web
docker inspect/diff web
docker images Tüm 
docker image inspect ubuntu
docker image inspect ubuntu:18.04
## kurulu işletim sistemini öğrenme 
## uname
docker logs --tail 200 <container_adi> ## contatinın son 200 loguna bakmayı sağlan
--------------------
Run
docker container run --name web -p 5000:80 alpine:3.9
docker container run -it -d --name nginx -p 5000:80 nginx:latest
exit sonrası container kapanmasın diye -d // -i interaktif connection  // -t
docker container start epic  stoptaki container ı çalıştırmak için 
--------------------
docker run -it --name nginx -v /home/var/volume/volume1:/www/html/ nginx /bin/bash



docker create volume1 /
    docker volume inspect volume1
--------------------
Docker container stop
Docker container kill
--------------------
COPY File
docker cp    source     to   target       (otherwise true)
docker cp web:/index.html index.html
--------------------
containerlara bağlanma
docker start b7d && docker attach b7d // container çalıştır ve bağlan
docker exec -it b7d /bin/bash              (terminal şekli için /bin/bash yazılır

docker exec -it oobeya-nginx -- sh
curl -H 'Host:oobeya.flo.com.tr' 127.0.0.1

--------------------
Çalışan Container ın Config bilgisini alma
docker-compose build  ##(SORUN VARSA)
docker exec -it d56da8b4c593 /bin/sh  ## İçine gir
vi /etc/nginx/nginx.conf ##Config bilgisini al
or
dfimage 0f1947a021ce
or
$ alias dfimage="docker run -v /var/run/docker.sock:/var/run/docker.sock --rm alpine/dfimage"
$ dfimage -sV=1.36 nginx:latest
--------------------
Silme
docker rmi ubuntu // ubuntu image ini silver
docker container prune // tüm containerları ini silver
docker volume prune // tüm volume leri ini silver
docker stop $(docker ps -a) && docker rm -fv $(docker ps -a) ## Konteynır ları stop ve remove için
docker image rm --force $(docker image ls) ## image'leri siliyor
docker system prune -af
--------------------
docker-compose up ##Docker composed çalıştırma
docker-compose down
--------------------
Dockerda da gitignore u kullanabiliriz..
--------------------
#!/bin/bash
#ubuntu üzerine docker ve docker-compose kurmak için gerekli script.

sudo apt-get update -y && apt-get upgrade -y

sudo apt install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update

sudo apt-get install -y docker-ce

sudo usermod -aG docker $USER

sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

sudo systemctl start docker

sudo systemctl enable docker
