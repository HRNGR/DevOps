Başlangıç
--------------------
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker
sudo usermod -a -G docker ec2-user
newgrp docker
--------------------
Mevcut durum listeleme
--------------------
docker ps -a
docker container ls
docker network ls       ## Default networks ; Bridge, Null, Host
docker images // image leri listeler
--------------------
Bilgi inceleme
docker version
docker info
docker port web
docker inspect/diff web
docker image inspect ubuntu
docker image inspect ubuntu:18.04
## kurulu işlletim sistemini öğrenme 
## uname
docker logs --tail 200 <container_adi> ## contatinın son 200 loguna bakmayı sağlan
--------------------
Run
docker container run --name web -p 5000:80 alpine:3.9
--------------------
COPY File
docker cp    source     to   target       (otherwise true)
docker cp web:/index.html index.html
--------------------
containerlara bağlanma
docker start b7d && docker attach b7d // container çalıştır ve bağlan
--------------------
Çalışan Container ın Config bilgisini alma
docker-compose build  ##(SORUN VARSA)
docker exec -it d56da8b4c593 /bin/sh  ## İçine gir
vi /etc/nginx/nginx.conf ##Config bilgisini al
or
dfimage 0f1947a021ce
or
$ alias dfimage="docker run -v /var/run/docker.sock:/var/run/docker.sock --rm alpine/dfimage"
$ dfimage -sV=1.36 nginx:latest
--------------------
Silme
docker rmi ubuntu // ubuntu image ini silver
docker container prune // tüm containerları ini silver
docker volume prune // tüm volume leri ini silver
docker stop $(docker ps -a) && docker rm -fv $(docker ps -a) ## Konteynır ları stop ve remove için
docker image rm --force $(docker image ls) ## image'leri siliyor
docker system prune -af
--------------------
docker-compose up ##Docker composed çalıştırma
docker-compose down
--------------------
Dockerda da gitignore u kullanabiliriz..
